# GITHUB_TOKEN env var defined in appveyor project
environment:
  matrix:
    - PYTHON: "C:\\Miniconda"
      PYTHON_VERSION: "2.7.11"
      PYTHON_ARCH: "32"
      QTIMPL: "PyQt4"
      TESTENVS: "py27-pyqt4"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH% %QTIMPL% %APPVEYOR_REPO_TAG_NAME%"

install:
  # dump version
  - git describe --tags --always
  # install and build Lua and the lupa python module
  - git clone https://github.com/LuaDist/lua.git
  - git -C lua describe --tags --always
  - mkdir lua-build
  - cd lua-build
  - "\"%LOCALAPPDATA%\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\vcvarsall.bat\" x86"
  - cmake -G "NMake Makefiles" ../lua
  - nmake
  - cd ..
  - ps: "iwr https://raw.githubusercontent.com/mattn/gntp-send/master/include/msinttypes/stdint.h -OutFile \".\\lua-build\\stdint.h\""
  - "%PYTHON%\\Scripts\\pip install --global-option=build_ext --global-option=\"-I%APPVEYOR_BUILD_FOLDER%\\lua-build;%APPVEYOR_BUILD_FOLDER%\\lua\\src\" --global-option=\"-L%APPVEYOR_BUILD_FOLDER%\\lua-build\" --global-option=\"-lliblua_static\" lupa"
  # use conda for installing pyqt
  - "%PYTHON%\\Scripts\\conda install --quiet -y pyqt=4.11.4 pywin32"
  # copy required dlls for packaging in setup.py
  - "xcopy %PYTHON%\\Library\\plugins\\imageformats .\\imageformats /I"
  - "xcopy %PYTHON%\\Library\\bin\\libeay32.dll ."
  - "xcopy %PYTHON%\\Library\\bin\\ssleay32.dll ."
  # install dependencies using pip
  - "%PYTHON%\\Scripts\\pip install wheel"
  - "%PYTHON%\\Scripts\\pip install pytest"
  - "%PYTHON%\\Scripts\\pip install cffi"
  - "%PYTHON%\\Scripts\\pip install cx_Freeze"
  - "%PYTHON%\\Scripts\\pip install -r requirements.txt --trusted-host content.faforever.com"
  # get uid.exe
  - ps: "$env:APPVEYOR_BUILD_VERSION = (& C:\\Miniconda\\python .\\src\\config\\version.py) + \"+\" + $env:APPVEYOR_BUILD_NUMBER"
  - ps: "$env:PYTEST_QT_API=\"pyqt4v2\""
  - ps: "$env:FAF_FORCE_PRODUCTION=true"
  - ps: "$env:AUTH_HEADER=\"Basic $([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(\"duk3luk3:$($env:GITHUB_TOKEN)\")))\""
  # download faf-uid.exe to ./lib/
  - ps: (Invoke-WebRequest -Uri https://api.github.com/repos/FAForever/uid/releases/latest -Headers @{"Authorization" = "$env:AUTH_HEADER"} | ConvertFrom-Json).assets | where {$_.name -eq "faf-uid.exe"} | %{ iwr $_.browser_download_url -OutFile ".\\lib\\faf-uid.exe" }

test_script:
  - "%PYTHON%\\python runtests.py -vv --full-trace"

after_test:
  - "%PYTHON%\\python setup.py bdist_msi"

artifacts:
  - path: '**\*.msi'

deploy:
  - provider: GitHub
    release: $(appveyor_build_version)
    auth_token:
      secure: "09WRxoB8lu9lPzuk3qYu0brKVQubLpnsS1Wdn49nYZYi5RDiva3z37eITcjtZkTD"
    artifact: /.*\.msi/
    draft: true
    prerelease: true
    on:
      appveyor_repo_tag: true

build: off
