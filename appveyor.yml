# GITHUB_TOKEN env var defined in appveyor project
# GITHUB_USER env var defined in appveyor project
environment:
  global:
    GITHUB_USER: faf-bot
    GITHUB_TOKEN:
      secure: Np481CGoJvTGB8O5rZTRswUZagGv7WtWT/TXTABQ184xUbL5vj9NoCtmtNRK6YxF
    UID_VERSION: v4.0.4
    ICE_ADAPTER_VERSION: v2.3.0
  matrix:
    - PYTHON: "C:\\Python36"
      PYWHEEL_INFIX: "cp36"

init:
  - "ECHO %PYTHON% %APPVEYOR_REPO_TAG_NAME%"

install:
  # dump version
  - git describe --tags --always
  # install dependencies using pip
  - "%PYTHON%\\Scripts\\pip install pyqt5==5.7.1"
  - "%PYTHON%\\Scripts\\pip install https://github.com/FAForever/python-wheels/releases/download/2.0.0/pywin32-221-%PYWHEEL_INFIX%-%PYWHEEL_INFIX%m-win32.whl"
  - "%PYTHON%\\Scripts\\pip install wheel"
  - "%PYTHON%\\Scripts\\pip install pytest"
  - "%PYTHON%\\Scripts\\pip install cx_Freeze==5.0.2"
  - "%PYTHON%\\Scripts\\pip install -r requirements.txt --trusted-host content.faforever.com"
  # copy required dlls for packaging in setup.py
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\plugins\\imageformats .\\imageformats /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\plugins\\platforms .\\platforms /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\plugins\\audio .\\audio /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\libeay32.dll ."
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\ssleay32.dll ."
  - "xcopy %PYTHON%\\lib\\site-packages\\pywin32_system32\\pywintypes36.dll ."
  - "xcopy %PYTHON%\\lib\\site-packages\\pywin32_system32\\pythoncom36.dll ."
  # for QtwebEngine until we get rid of it
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\QtWebEngineProcess.exe . /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\Qt5WebEngine.dll . /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\Qt5WebEngineCore.dll . /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\Qt5WebEngineWidgets.dll . /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\Qt5WebChannel.dll . /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\libEGL.dll . /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\bin\\libGLESv2.dll . /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\resources\\icudtl.dat . /I"
  - "xcopy %PYTHON%\\lib\\site-packages\\PyQt5\\Qt\\resources\\qtwebengine_resources.pak . /I" # Needed for JS to work

  - ps: "$env:faf_version = \"$(&C:\\Python36\\python .\\src\\config\\version.py)\".Replace(' ','')"
  - ps: "$env:APPVEYOR_BUILD_VERSION = \"$($env:faf_version)$($env:APPVEYOR_BUILD_NUMBER)\""
  - ps: "Write-Host \"$($env:faf_version) + $($env:APPVEYOR_BUILD_NUMBER) = $($env:APPVEYOR_BUILD_VERSION)\""
  - ps: "$env:PYTEST_QT_API=\"pyqt5\""
  - ps: "$env:FAF_FORCE_PRODUCTION=true"
  - ps: "Invoke-WebRequest -Uri \"https://github.com/FAForever/uid/releases/download/$($env:UID_VERSION)/faf-uid.exe\" -OutFile \".\\lib\\faf-uid.exe\""
  - ps: "Invoke-WebRequest -Uri \"https://github.com/FAForever/java-ice-adapter/releases/download/v1.0.0/faf-ice-adapter-jre-base.7z\" -OutFile \".\\faf-ice-adapter-jre-base.7z\""
  - 7z x faf-ice-adapter-jre-base.7z -olib
  - ps: "Invoke-WebRequest -Uri \"https://github.com/FAForever/java-ice-adapter/releases/download/$($env:ICE_ADAPTER_VERSION)/faf-ice-adapter.jar\" -OutFile \".\\lib\\ice-adapter\\faf-ice-adapter.jar\""
test_script:
  - "%PYTHON%\\python runtests.py -vv --full-trace"

after_test:
  - "%PYTHON%\\python setup.py bdist_msi"

artifacts:
  - path: '**\*.msi'

deploy:
  - provider: GitHub
    release: $(appveyor_build_version)
    auth_token:
      secure: "09WRxoB8lu9lPzuk3qYu0brKVQubLpnsS1Wdn49nYZYi5RDiva3z37eITcjtZkTD"
    artifact: /.*\.msi/
    draft: true
    prerelease: true
    on:
      appveyor_repo_tag: true

build: off
