# GITHUB_TOKEN env var defined in appveyor project
# GITHUB_USER env var defined in appveyor project
environment:
  global:
    GITHUB_USER: faf-bot
    GITHUB_TOKEN:
      secure: Np481CGoJvTGB8O5rZTRswUZagGv7WtWT/TXTABQ184xUbL5vj9NoCtmtNRK6YxF
  matrix:
    - PYTHON: "C:\\Miniconda"
      PYWHEEL_INFIX: "cp27"

init:
  - "ECHO %PYTHON% %APPVEYOR_REPO_TAG_NAME%"

install:
  # dump version
  - git describe --tags --always
  # use conda for installing pyqt
  - "%PYTHON%\\Scripts\\conda install --quiet -y pyqt=4.11.4 pywin32"
  # copy required dlls for packaging in setup.py
  - "xcopy %PYTHON%\\Library\\plugins\\imageformats .\\imageformats /I"
  - "xcopy %PYTHON%\\Library\\bin\\libeay32.dll ."
  - "xcopy %PYTHON%\\Library\\bin\\ssleay32.dll ."
  # install dependencies using pip
  - "%PYTHON%\\Scripts\\pip install https://github.com/FAForever/python-wheels/releases/download/1.0.2/bsdiff4-1.1.5-%PYWHEEL_INFIX%-%PYWHEEL_INFIX%m-win32.whl"
  - "%PYTHON%\\Scripts\\pip install https://github.com/FAForever/python-wheels/releases/download/1.0.2/lupa-1.3-%PYWHEEL_INFIX%-%PYWHEEL_INFIX%m-win32.whl"
  - "%PYTHON%\\Scripts\\pip install wheel"
  - "%PYTHON%\\Scripts\\pip install pytest"
  - "%PYTHON%\\Scripts\\pip install cffi"
  - "%PYTHON%\\Scripts\\pip install cx_Freeze"
  - "%PYTHON%\\Scripts\\pip install -r requirements.txt --trusted-host content.faforever.com"
  - ps: "$env:faf_version = \"$(&C:\\Miniconda\\python .\\src\\config\\version.py)\".Replace(' ','')"
  - ps: "$env:APPVEYOR_BUILD_VERSION = \"$($env:faf_version)+$($env:APPVEYOR_BUILD_NUMBER)\""
  - ps: "Write-Host \"$($env:faf_version) + $($env:APPVEYOR_BUILD_NUMBER) = $($env:APPVEYOR_BUILD_VERSION)\""
  - ps: "$env:PYTEST_QT_API=\"pyqt4v2\""
  - ps: "$env:FAF_FORCE_PRODUCTION=true"
  - ps:
      |
        if ($env:GITHUB_TOKEN) {
          $env:AUTH_HEADER="Basic $([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes("$($env:GITHUB_USER):$($env:GITHUB_TOKEN)")))"
          $headers = @{"Authorization" = "$env:AUTH_HEADER"}
          Write-Host "Added Auth Header"
        } else {
          Write-Host "No Token, skipping Auth Header. This may lead to build failure due to Github API rate limiting."
          $headers = @{}
        }
        (Invoke-WebRequest -Uri https://api.github.com/repos/FAForever/uid/releases/latest -Headers $headers  | ConvertFrom-Json).assets | where {$_.name -eq "faf-uid.exe"} | %{ iwr $_.browser_download_url -OutFile ".\\lib\\faf-uid.exe" }
        (Invoke-WebRequest -Uri https://api.github.com/repos/FAForever/ice-adapter/releases/latest -Headers $headers  | ConvertFrom-Json).assets | where {$_.name -like "faf-ice-adapter-win32-*.zip"} | %{ iwr $_.browser_download_url -OutFile ".\\faf-ice-adapter.zip" }
  - ps: Expand-Archive .\\faf-ice-adapter.zip -DestinationPath .
test_script:
  - "%PYTHON%\\python runtests.py -vv --full-trace"

after_test:
  - "%PYTHON%\\python setup.py bdist_msi"

artifacts:
  - path: '**\*.msi'

deploy:
  - provider: GitHub
    release: $(appveyor_build_version)
    auth_token:
      secure: "09WRxoB8lu9lPzuk3qYu0brKVQubLpnsS1Wdn49nYZYi5RDiva3z37eITcjtZkTD"
    artifact: /.*\.msi/
    draft: true
    prerelease: true
    on:
      appveyor_repo_tag: true

build: off
